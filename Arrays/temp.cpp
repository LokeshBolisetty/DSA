#include <iostream>
#include <bits/stdc++.h>
using namespace std;
int MaxSumOfSubMatrices(vector<vector<int>> A,int k){
    if(k>A.size())return -1;
    int submatrix = A.size()-k+1;
    int sumArray[A.size()][A.size()];
    //vector<vector<int>> sumArray(submatrix);
    for(int j =0;j<A.size();j++){
        int sum=0;
        for(int i=0;i<k;i++){
            sum+=A[i][j];
        }
        sumArray[0][j]=sum;
        for(int i=1;i<submatrix;i++){
            sum+=A[i+k-1][j]-sumArray[i-1][j];
            sumArray[i][j] = sum;
        }
    }
        int maxSum=INT_MIN;
    for(int i =0;i<submatrix;i++){
        int sum=0;
        for(int j=0;j<k;j++){
            sum+=sumArray[i][j];
        }
        if(sum>maxSum)maxSum=sum;
        for(int j=1;j<submatrix;j++){
            sum += (-A[i][j-1]+A[i][j+k-1]);
            if(sum>maxSum)maxSum=sum;
        }   
    }
    return maxSum;
    /*
    for(int i =0;i<A.size();i++){
        int sum=0;
        for(int j=0;j<k;j++){
            sum+=A[i][j];
        }
        sumArray[i].push_back(sum);
        for(int j=1;j<submatrix;j++){
            sum += (-A[i][j-1]+A[i][j+k-1]);
            sumArray[i].push_back(sum);
        }
    }
    int maxSum=INT_MIN;
    for(int j =0;j<sumArray.size();j++){
        int sum=0;
        for(int i=0;i<k;i++){
            sum+=sumArray[i][j];
        }
        if(sum>maxSum)maxSum=sum; 
        for(int i=1;i<submatrix;i++){
            sum+=sumArray[i+k-1][j]-sumArray[i-1][j];
            if(sum>maxSum)maxSum=sum;
        }
    }*/
    return maxSum;
}

int main(){
    vector<vector<int>> v = {
  {51, 7, 51, 10, 57, -23, -91, -97, 76, 40, -77, 74, -46, 69, 6, -15, 99, -52, 30, 73, -42, -84, -16, 73, -69, -96, 83, 91, -78, -90, 87, 64},
  {68, 94, 79, -77, 9, -43, 41, -15, -23, -77, -28, -72, -65, 49, 17, -91, 43, -33, -35, 90, -9, 69, 38, -96, 76, -88, 91, -7, -91, -80, 97, -38},
  {28, 0, 59, -58, -60, -11, -6, -58, -80, -14, 46, 64, -14, -29, 43, -34, -26, -55, 88, 49, -73, 54, 4, -19, -54, 57, -15, 14, 50, -68, -27, 43},
  {12, -68, -17, -61, 68, 89, -17, -91, 87, 95, -55, 12, -61, 35, -52, -21, -93, -70, 54, -99, 40, -57, 18, -88, 77, -77, -28, 83, -15, -14, 20, -43},
  {2, -61, -94, -24, 24, -48, -63, -65, -1, 16, -10, 67, -94, -79, 75, 20, 92, 65, 47, -42, -16, 31, -71, 82, 5, 62, -11, 23, -30, 42, -18, 96},
  {80, 69, -28, 15, -49, 36, 55, 74, -23, 54, 29, -18, -49, 69, -63, 1, -24, -96, -27, 61, 97, 95, 25, -15, -38, -71, 60, 18, -27, -21, 9, -38},
  {-76, 74, -18, -25, -85, 43, -54, 32, 68, -16, 61, -28, -14, -34, -11, 51, -96, -67, 94, -24, 98, -96, 33, -32, 84, -83, 64, -84, -86, -34, 96, -27},
  {48, 10, 96, 41, 91, -34, 89, -80, 55, 48, -49, -19, -29, -75, -72, 73, -46, 9, -70, -62, 91, 39, -47, -52, 67, -46, -23, -10, 97, -44, 73, 89},
  {-38, 36, -71, -12, 39, 85, -59, 67, 20, 60, -53, 81, 82, -94, 89, 84, -97, 60, -38, 32, 92, -57, -37, 23, -89, 40, -8, -57, -30, 19, -51, 12},
  {76, -55, -14, 56, -97, 64, -2, 8, -22, 38, 23, -95, -89, 93, 17, 43, -73, 14, -10, -84, -99, 39, 44, -64, -88, -26, -67, 40, -99, 83, 35, -72},
  {-67, -63, 34, 77, -29, 22, -37, -41, 40, 68, -18, -52, 66, -10, -73, -42, -29, 6, 5, -99, -66, 70, 55, 7, -1, 30, -25, -97, -61, 94, -12, -36},
  {-27, -52, 58, -20, -13, 64, 13, -87, -48, 70, 78, 66, 4, -84, -51, 77, -63, 37, -41, -68, 55, 5, 26, 37, 66, 14, 55, -10, -54, 82, -65, -7},
  {36, -54, -62, -44, -97, 14, 99, -59, 25, -26, 24, 44, -37, 49, -24, 97, 34, -53, -74, -57, -56, 92, 61, -31, 75, 39, -4, -19, -29, -32, 13, -34},
  {-70, -94, 9, -10, -41, -16, 46, 59, 3, -94, 91, -7, 96, 83, 50, 57, -65, -88, -33, -31, 65, 3, 73, 91, 16, 49, 15, 18, -57, 88, -3, 11},
  {-9, -26, 63, 25, -93, 70, 21, 27, -42, 36, -25, -79, 76, 99, 19, -59, -89, 12, -91, -65, -37, -70, 14, 36, 83, -68, 88, 39, 5, -30, 40, -32},
  {91, 28, 85, 37, 20, 24, 97, 54, 3, -6, 62, -35, 54, 0, 2, 14, -71, 94, -74, -37, 28, 48, -21, 51, 99, -97, -58, -20, -84, -10, -2, -42},
  {30, 53, 51, -38, -56, -51, -15, -45, 72, -11, -42, 52, 29, -60, -40, -54, -73, -56, -78, 36, -27, 54, 33, 56, -49, 91, 34, 31, 22, -21, -98, 76},
  {80, -31, 88, -71, -15, -98, -90, 27, -26, 60, -1, -58, -45, 93, -35, 28, 72, -16, 26, 98, 23, -99, 87, -12, 97, -48, 75, 50, -22, -45, -7, -70},
  {-94, 31, -11, 65, 21, 27, 64, -60, 13, 89, 10, -12, 63, 20, 88, -79, -36, -97, 54, 22, 16, -46, 86, -75, 24, -82, 2, 20, -41, -12, -18, 41},
  {74, 0, 66, -78, 54, 52, -50, 16, -74, -14, -98, 37, 1, 1, 49, 67, 2, -35, -19, -57, 10, 8, -11, -42, 84, 21, 6, 86, 87, 71, -10, 72},
  {18, -27, 53, -19, -38, 96, -87, -49, 15, -96, 85, 33, 64, 4, -63, -47, 84, 33, 72, 21, 44, 70, -43, -12, 29, -3, 40, 23, 1, 43, -24, 31},
  {0, -52, -87, -47, 11, -7, 32, -49, -86, 99, -84, -88, -66, -51, -48, 12, 41, -91, -50, 80, 69, 35, 62, 65, 11, -83, -89, 63, 21, -94, 45, -57},
  {-50, 93, -36, -58, -56, -67, 36, 2, -75, 59, 53, -93, -94, 43, 29, 51, -30, 95, -72, 41, -41, -80, 15, 44, 78, -42, 84, 38, 83, -62, 37, -65},
  {-70, 82, 15, -20, -79, -75, 52, -96, -54, -88, -96, -55, -75, -56, 49, 94, 29, 32, -91, 16, -71, 61, 33, 30, 46, 32, -17, -27, -61, -20, -65, 87},
  {70, 89, -71, 60, 21, 97, 89, 63, -56, -79, 5, -85, 13, 34, 99, 37, -85, 64, -42, 11, 83, -54, 43, 37, -69, -45, -49, 51, -10, -48, -5, -80},
  {-39, 60, 67, -27, -66, 33, 91, 1, 78, 87, -21, 0, -85, 9, -28, -39, 52, 70, -77, -36, 37, -50, -90, 91, 78, -57, 61, -79, 18, -2, 83, 33},
  {-5, 9, -28, -32, 3, -36, -55, -51, -50, -54, 42, -56, 55, -41, 68, -15, 1, 68, -53, -94, 87, 35, 9, 64, -67, 51, 40, -75, 24, 46, -100, -62},
  {-69, -79, -83, -76, 84, -85, 44, 52, -81, -30, 67, 19, 74, -13, -70, 45, 16, -56, -1, 62, -15, 15, 21, 2, 41, -96, 73, 33, -48, -89, -71, -76},
  {59, 83, -35, -55, 50, -74, 91, -3, -87, 71, 86, -38, 90, 84, 6, -82, -78, 19, -34, -82, 91, 59, 66, 3, -21, -2, -33, 45, 3, -70, -80, -75},
  {34, -79, -67, -65, -13, 93, -73, 48, -76, -8, 18, -100, -56, -69, -14, -5, 8, 53, 97, 92, 21, -81, 7, -29, -78, 61, 91, -48, -49, 23, 65, 56},
  {80, -39, -35, 23, 0, -72, -65, 53, -88, -18, -24, 57, -11, -8, 99, 76, -39, -58, 31, -40, 0, -62, -20, -80, 45, 29, 68, 41, 62, -66, -67, -30},
  {-18, -100, 60, 64, 41, -1, 36, -35, -67, -71, -73, -46, -72, 19, 84, 10, 68, -83, 97, 25, -94, -90, -37, -52, -10, 69, 44, 99, -57, 55, -36, 37}
};
    //vector<vector<int>> A = {{1,1,1,1,1},{2,2,2,2,2,},{3,8,6,7,3},{4,4,4,4,4},{5,5,5,5,5}};
    cout<<MaxSumOfSubMatrices(v,23)<<endl;
    return 0;
}