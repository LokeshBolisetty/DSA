/**
 * @file RodCuttingProblem.cpp
 * @author lokesh
 * @brief This file contains the solution to the rod cutting problem. 
 * The problem goes as We are given a rod of size ‘N’. 
 * It can be cut into pieces. 
 * Each length of a piece has a particular price given by the price array. 
 * Our task is to find the maximum revenue that can be generated by selling the rod after cutting( if required) into pieces.
 * @version 0.1
 * @date 2022-08-08
 * 
 * @copyright Copyright (c) 2022
 * 
 */
#include<iostream>
#include<vector>

using namespace std;

int maxProfit(vector<int> &price, vector<vector<int>> &dp, int start, int end){
    int answer;
    int n = price.size();
    if(start>end)answer = 0;
    else if(start==end){
        dp[start][end] = price[0];
        answer = dp[start][end];
    }
    else if(dp[start][end]!=-1)answer = dp[start][end];
    else{ 
        for(int i=start;i<=end;i++){ 
            int length1 = i-start;
            int length2 = end - i-1;
            dp[start][end] = max(max(dp[start][end], price[length1]+price[length2]), maxProfit(price, dp, start, i)+maxProfit(price, dp, i+1, end));
        }
        answer = dp[start][end];
    }
    return answer;
}
int cutRod(vector<int> &price, int n)
{
	vector<vector<int>> dp(n+1, vector<int>(n+1, -1));
    int answer = maxProfit(price, dp, 1, n);
    return answer;
}


int main(){
    int n = 5;
    vector<int> prices = {2, 5, 7, 8, 10};
    cout<<cutRod(prices, n)<<endl;
    return 0;
}